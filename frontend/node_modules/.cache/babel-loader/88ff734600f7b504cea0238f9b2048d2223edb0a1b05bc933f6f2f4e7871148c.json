{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhksw\\\\Documents\\\\work\\\\devdoc-0605\\\\frontend\\\\src\\\\components\\\\ResumeList.js\",\n  _s = $RefreshSig$();\n// ResumeList.js\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResumeList() {\n  _s();\n  const [resumes, setResumes] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchResumes();\n  }, []);\n  const fetchResumes = async () => {\n    try {\n      const response = await axios.get('/api/resumes');\n      setResumes(response.data);\n    } catch (error) {\n      console.error('Failed to fetch resumes', error);\n    }\n  };\n  const createResume = async () => {\n    try {\n      const response = await axios.post('/api/resumes');\n      const newResumeId = response.data.id; // 새로 생성된 Resume의 ID 가져오기\n      navigate(`/resumes/${newResumeId}`); // 새로 생성된 Resume의 ID를 ResumeForm.js로 전달\n      fetchResumes();\n    } catch (error) {\n      console.error('Failed to create resume', error);\n    }\n  };\n  const deleteResume = async id => {\n    try {\n      await axios.delete(`/api/resumes/${id}`);\n      fetchResumes();\n    } catch (error) {\n      console.error('Failed to delete resume', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Resume List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createResume,\n      style: {\n        fontSize: '2rem',\n        padding: '1rem'\n      },\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyle: 'none',\n        padding: 0\n      },\n      children: resumes.map(resume => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          marginTop: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(`/resumes/${resume.id}`),\n          children: `Resume ${resume.id}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteResume(resume.id),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, resume.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(ResumeList, \"XMigl5cS0d2UYx1ipi9gciUFh9Y=\", false, function () {\n  return [useNavigate];\n});\n_c = ResumeList;\nexport default ResumeList;\nvar _c;\n$RefreshReg$(_c, \"ResumeList\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","ResumeList","_s","resumes","setResumes","navigate","fetchResumes","response","get","data","error","console","createResume","post","newResumeId","id","deleteResume","delete","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fontSize","padding","listStyle","map","resume","_c","$RefreshReg$"],"sources":["C:/Users/dhksw/Documents/work/devdoc-0605/frontend/src/components/ResumeList.js"],"sourcesContent":["// ResumeList.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction ResumeList() {\r\n  const [resumes, setResumes] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchResumes();\r\n  }, []);\r\n\r\n  const fetchResumes = async () => {\r\n    try {\r\n      const response = await axios.get('/api/resumes');\r\n      setResumes(response.data);\r\n    } catch (error) {\r\n      console.error('Failed to fetch resumes', error);\r\n    }\r\n  };\r\n\r\n  const createResume = async () => {\r\n    try {\r\n      const response = await axios.post('/api/resumes');\r\n      const newResumeId = response.data.id; // 새로 생성된 Resume의 ID 가져오기\r\n      navigate(`/resumes/${newResumeId}`); // 새로 생성된 Resume의 ID를 ResumeForm.js로 전달\r\n      fetchResumes();\r\n    } catch (error) {\r\n      console.error('Failed to create resume', error);\r\n    }\r\n  };\r\n\r\n  const deleteResume = async (id) => {\r\n    try {\r\n      await axios.delete(`/api/resumes/${id}`);\r\n      fetchResumes();\r\n    } catch (error) {\r\n      console.error('Failed to delete resume', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', marginTop: '2rem' }}>\r\n      <h2>Resume List</h2>\r\n      <button onClick={createResume} style={{ fontSize: '2rem', padding: '1rem' }}>+</button>\r\n      <ul style={{ listStyle: 'none', padding: 0 }}>\r\n        {resumes.map(resume => (\r\n          <li key={resume.id} style={{ marginTop: '1rem' }}>\r\n            <button onClick={() => navigate(`/resumes/${resume.id}`)}>{`Resume ${resume.id}`}</button>\r\n            <button onClick={() => deleteResume(resume.id)}>X</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResumeList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}