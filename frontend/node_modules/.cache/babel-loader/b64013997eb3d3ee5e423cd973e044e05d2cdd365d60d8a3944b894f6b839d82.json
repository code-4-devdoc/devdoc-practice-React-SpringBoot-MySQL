{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhksw\\\\Documents\\\\work\\\\devdoc-0605\\\\frontend\\\\src\\\\components\\\\ResumeFormProject.js\",\n  _s = $RefreshSig$();\n// ResumeFormProject.js\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResumeFormProject({\n  resumeId\n}) {\n  _s();\n  const [projectTitle, setProjectTitle] = useState('');\n  const [projectContent, setProjectContent] = useState('');\n  const [projectPeriod, setProjectPeriod] = useState('');\n  const [isCurrent, setIsCurrent] = useState(false);\n  const handleProjectSubmit = async () => {\n    try {\n      await axios.post(`/api/resumes/${resumeId}/projects`, {\n        project_title: projectTitle,\n        project_content: projectContent,\n        project_period: projectPeriod,\n        is_current: isCurrent\n      });\n      // Clear input fields after successful submission\n      setProjectTitle('');\n      setProjectContent('');\n      setProjectPeriod('');\n      setIsCurrent(false);\n      // Optionally, you can refetch projects to update the list immediately\n    } catch (error) {\n      console.error('Error submitting project:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Project Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: projectTitle,\n          onChange: e => setProjectTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Project Content:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: projectContent,\n          onChange: e => setProjectContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Project Period:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: projectPeriod,\n          onChange: e => setProjectPeriod(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Is Current:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isCurrent,\n          onChange: e => setIsCurrent(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleProjectSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(ResumeFormProject, \"WJSC1vOVQ+6sFAtJb+sJtnSdiO4=\");\n_c = ResumeFormProject;\nexport default ResumeFormProject;\nvar _c;\n$RefreshReg$(_c, \"ResumeFormProject\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ResumeFormProject","resumeId","_s","projectTitle","setProjectTitle","projectContent","setProjectContent","projectPeriod","setProjectPeriod","isCurrent","setIsCurrent","handleProjectSubmit","post","project_title","project_content","project_period","is_current","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","checked","onClick","_c","$RefreshReg$"],"sources":["C:/Users/dhksw/Documents/work/devdoc-0605/frontend/src/components/ResumeFormProject.js"],"sourcesContent":["// ResumeFormProject.js\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ResumeFormProject({ resumeId }) {\r\n  const [projectTitle, setProjectTitle] = useState('');\r\n  const [projectContent, setProjectContent] = useState('');\r\n  const [projectPeriod, setProjectPeriod] = useState('');\r\n  const [isCurrent, setIsCurrent] = useState(false);\r\n\r\n  const handleProjectSubmit = async () => {\r\n    try {\r\n      await axios.post(`/api/resumes/${resumeId}/projects`, {\r\n        project_title: projectTitle,\r\n        project_content: projectContent,\r\n        project_period: projectPeriod,\r\n        is_current: isCurrent\r\n      });\r\n      // Clear input fields after successful submission\r\n      setProjectTitle('');\r\n      setProjectContent('');\r\n      setProjectPeriod('');\r\n      setIsCurrent(false);\r\n      // Optionally, you can refetch projects to update the list immediately\r\n    } catch (error) {\r\n      console.error('Error submitting project:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Add New Project</h2>\r\n      <div>\r\n        <label>\r\n          Project Title:\r\n          <input type=\"text\" value={projectTitle} onChange={(e) => setProjectTitle(e.target.value)} />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          Project Content:\r\n          <textarea value={projectContent} onChange={(e) => setProjectContent(e.target.value)} />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          Project Period:\r\n          <input type=\"text\" value={projectPeriod} onChange={(e) => setProjectPeriod(e.target.value)} />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          Is Current:\r\n          <input type=\"checkbox\" checked={isCurrent} onChange={(e) => setIsCurrent(e.target.checked)} />\r\n        </label>\r\n      </div>\r\n      <button onClick={handleProjectSubmit}>Submit</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResumeFormProject;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}